# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane
# Fabric Tokens
API_TOKEN = ''
BUILD_SECRET = ''

default_platform(:ios)

platform :ios do
  desc "Generate new localized screenshots"
  lane :lint do
    swiftlint(
      mode: :lint,                                    # SwiftLint mode: :lint (default) or :autocorrect
      executable: "./Pods/SwiftLint/swiftlint",       # The SwiftLint binary path (optional). Important if you've installed it via CocoaPods
      output_file: "./build/swiftlint.result.xml",   # The path of the output file (optional)
      reporter: "checkstyle",                         # The custom reporter to use (optional)
      config_file: ".swiftlint-ci.yml",               # The path of the configuration file (optional)
      # path: "/path/to/lint",                        # Specify path to lint (optional)
      #files: [                                       # List of files to process (optional)
      #    "AppDelegate.swift",
      #    "path/to/project/Model.swift"
      #],
      ignore_exit_status: true,                     # Allow fastlane to continue even if SwiftLint returns a non-zero exit status (Default: false)
      # quiet: false,                                 # Don't print status logs like 'Linting ' & 'Done linting' (Default: false)
      # strict: true                                  # Fail on warnings? (Default: false)
    )
  end

  lane :tests do
    # https://docs.fastlane.tools/actions/scan/
  	scan(
      workspace: "HelloWorldWithPods.xcworkspace",
      scheme: "HelloWorldWithPods",
      devices: ["iPhone 7"],
      code_coverage: true,
      clean: true,
      skip_build: false,
      output_directory: "build",
      output_types: "html,junit,json-compilation-database",
      output_style: "basic",
      buildlog_path: "build",
      derived_data_path: "build",
      #slack_url: "https://hooks.slack.com/services/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"
    )

    # https://docs.fastlane.tools/actions/xcov/
    xcov(
      workspace: "HelloWorldWithPods.xcworkspace",
      scheme: "HelloWorldWithPods",
      output_directory: "xcov_output",
      derived_data_path: "build",
      legacy_support: "false",
      ignore_file_path: "Pods",
      only_project_targets: true,
      #slack_url: "https://hooks.slack.com/services/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"
    )

  end

  lane :beta do
  	build_app(
      scheme: "HelloWorldWithPods", 
      export_method: "development"
    )

    upload_crashlytics(groups: "testers")
    #notify_on_slack
  end

  # Lane to be run by Jenkins
  # see https://github.com/Backelite/sonar-swift/ to setup all the pre-requisites
  # based on https://github.com/Backelite/sonar-swift/blob/develop/docs/sonarqube-fastlane.md
  lane :analysis do
    slather(
      cobertura_xml: true, 
      jenkins: true, 
      verbose: true,
      scheme: "HelloWorldWithPods", 
      build_directory: "build", 
      output_directory: "build", 
      proj: "HelloWorldWithPods.xcodeproj",
      workspace: "HelloWorldWithPods.xcworkspace"
    )

    # https://github.com/Backelite/sonar-swift/issues/75
    sh(
    	"cd .. && lizard ./HelloWorldWithPods -l swift --xml --verbose > ./build/lizard-report.xml"
    )

    swiftlint(
      executable: "./Pods/SwiftLint/swiftlint",
    	output_file: "./build/swiftlint.txt", 
      config_file: ".swiftlint-ci.yml", 
    	ignore_exit_status: true
    )
    
    # settings are in most-popular-ios/sonar-project.properties
    sonar
  end

  private_lane :upload_crashlytics do |options|
    groups = options[:groups]

    crashlytics(
      api_token: API_TOKEN,
      build_secret: BUILD_SECRET,
      #groups: groups
    )
    upload_symbols_to_crashlytics(api_token: API_TOKEN)
  end

  private_lane :notify_on_slack do

    slack(
    slack_url: "https://hooks.slack.com/services/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"
    )

  end

  # --- Support for Multiple Environment Builds ---
  desc "Creates a build for DEV environment"
  lane :dev_build do
    # https://docs.fastlane.tools/actions/set_info_plist_value/
    set_info_plist_value(path: "HelloWorldWithPods/Dev/Info.plist", key: "CFBundleDisplayName", value: "HelloWorldWithPods - DEV")
    build_app(scheme: "HelloWorldWithPods", export_method: "ad-hoc")
    upload_crashlytics(groups: "ios-dev")
  end

end
